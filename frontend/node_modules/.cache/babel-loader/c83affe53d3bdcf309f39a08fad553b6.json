{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nvar _hoisted_1 = {\n  key: 0\n};\nvar _hoisted_2 = {\n  class: \"mb-3\"\n};\n\nvar _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"firstName\",\n  class: \"form-label\"\n}, \"First Name\", -1\n/* HOISTED */\n);\n\nvar _hoisted_4 = {\n  class: \"mb-3\"\n};\n\nvar _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"lastName\",\n  class: \"form-label\"\n}, \"Last Name\", -1\n/* HOISTED */\n);\n\nvar _hoisted_6 = {\n  class: \"mb-3\"\n};\n\nvar _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\",\n  class: \"form-label\"\n}, \"Email\", -1\n/* HOISTED */\n);\n\nvar _hoisted_8 = {\n  class: \"mb-3\"\n};\n\nvar _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"phone\",\n  class: \"form-label\"\n}, \"Phone\", -1\n/* HOISTED */\n);\n\nvar _hoisted_10 = {\n  class: \"mb-3\"\n};\nvar _hoisted_11 = {\n  key: 1\n};\n\nvar _hoisted_12 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"alert alert-success\",\n  role: \"alert\"\n}, \" Save customer successfully! \", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [!$data.submitted ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"firstName\",\n    required: \"\",\n    name: \"firstName\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.customer.firstName = $event;\n    })\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.customer.firstName]])]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"lastName\",\n    required: \"\",\n    name: \"lastName\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $data.customer.lastName = $event;\n    })\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.customer.lastName]])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"email\",\n    required: \"\",\n    name: \"email\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return $data.customer.email = $event;\n    })\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.customer.email]])]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    id: \"phone\",\n    required: \"\",\n    name: \"phone\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n      return $data.customer.phone = $event;\n    })\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.customer.phone]])]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = function () {\n      return $options.saveCustomer && $options.saveCustomer.apply($options, arguments);\n    }),\n    class: \"btn btn-primary\"\n  }, \"Submit\")])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = function () {\n      return $options.newCustomer && $options.newCustomer.apply($options, arguments);\n    }),\n    class: \"btn btn-primary\"\n  }, \"Add new customer\")]))]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","for","role","_createElementBlock","$data","_hoisted_1","_hoisted_3","type","id","required","name","firstName","$event","_hoisted_5","lastName","_hoisted_7","email","_hoisted_9","phone","onClick","$options","_hoisted_11","_hoisted_12"],"sourceRoot":"","sources":["/home/bwhitely/IdeaProjects/product/frontend/src/components/AddCustomer.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-if=\"!submitted\">\n      <div class=\"mb-3\">\n        <label for=\"firstName\" class=\"form-label\">First Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"firstName\" required name=\"firstName\" v-model=\"customer.firstName\">\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"lastName\" class=\"form-label\">Last Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"lastName\" required name=\"lastName\" v-model=\"customer.lastName\">\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"email\" class=\"form-label\">Email</label>\n        <input type=\"text\" class=\"form-control\" id=\"email\" required name=\"email\" v-model=\"customer.email\">\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"phone\" class=\"form-label\">Phone</label>\n        <input type=\"text\" class=\"form-control\" id=\"phone\" required name=\"phone\" v-model=\"customer.phone\">\n      </div>\n      <div class=\"mb-3\">\n        <button @click=\"saveCustomer\" class=\"btn btn-primary\">Submit</button>\n      </div>\n    </div>\n    <div v-else>\n      <div class=\"alert alert-success\" role=\"alert\">\n        Save customer successfully!\n      </div>\n      <button @click=\"newCustomer\" class=\"btn btn-primary\">Add new customer</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CustomerDataService from \"@/services/CustomerDataService\";\n\nexport default {\n  name: \"add-customer\",\n  data() {\n    return {\n      customer: {\n        id: null,\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phone: \"\"\n      },\n      submitted: false\n    }\n  },\n  methods: {\n    saveCustomer() {\n      var data = {\n        firstName: this.customer.firstName,\n        lastName: this.customer.lastName,\n        email: this.customer.email,\n        phone: this.customer.phone\n      }\n      CustomerDataService.create(data)\n      .then(resp => {\n        this.customer.id = resp.data.id\n        this.submitted = true;\n      })\n      .catch(e => {\n        console.log(e)\n      })\n    },\n    newCustomer() {\n      this.submitted = false\n      this.customer = {}\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}